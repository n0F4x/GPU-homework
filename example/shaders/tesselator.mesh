#version 450
#extension GL_EXT_mesh_shader: require
#extension GL_EXT_buffer_reference: require

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Vertex {
    vec2 position;
    vec2 texCoord;
};

layout (std430, buffer_reference, buffer_reference_align = 16) readonly buffer VertexBuffer {
    Vertex vertices[];
};

layout (set = 0, binding = 1) uniform Vertices {
    VertexBuffer vertexBuffer;
};

layout (lines, max_vertices = 2, max_primitives = 1) out;

layout (location = 0) out vec3 out_colors[];

void main() {
    uint vertexCount = 2;
    uint lineCount = 1;
    SetMeshOutputsEXT(vertexCount, lineCount);
    gl_PrimitiveLineIndicesEXT[0] = uvec2(0, 1);

    gl_MeshVerticesEXT[0].gl_Position = vec4(0.5, -0.5, 0, 1);
    gl_MeshVerticesEXT[1].gl_Position = vec4(0.5, 0.5, 0, 1);

    out_colors[0] = vec3(0, 1, 0);
    out_colors[1] = vec3(0, 1, 0);
}
